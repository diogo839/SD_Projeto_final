package programas;

import javax.swing.*;
import java.awt.event.*;
import java.util.*;

public class ClientFrame extends JFrame {

    private Card card;
    private CardLabel cardLabel;
    private Deck gameDeck;


    public ClientFrame() {
        initComponents();

        gameDeck = new Deck();         // cria um baralho
        gameDeck.shuffle();            // embaralha

        //drawHand(); 
        
        drawBlackjack();
    
    }
    
    private void drawBlackjack(){
        // cartas do dealer
        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage("bv");
        cardLabel.setCardCovered(false);
        cardLabel.setLocation(270,150);
        this.TablePanel.add(cardLabel);
        
        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(false);
        cardLabel.setLocation(350,150);
        this.TablePanel.add(cardLabel);

        // cartas do player 1
        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(true);
        cardLabel.setLocation(530,350);
        this.TablePanel.add(cardLabel);

        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(false);
        cardLabel.setLocation(550,350);
        this.TablePanel.add(cardLabel);        
 
        // cartas do player 2
        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(true);
        cardLabel.setLocation(300,350);
        this.TablePanel.add(cardLabel);

        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(false);
        cardLabel.setLocation(320,350);
        this.TablePanel.add(cardLabel); 
        
        // cartas do player 3
        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(true);
        cardLabel.setLocation(80,350);
        this.TablePanel.add(cardLabel);

        cardLabel = new CardLabel();
        card = gameDeck.deal();
        cardLabel.setCardImage(card.getName());
        cardLabel.setCardCovered(false);
        cardLabel.setLocation(100,350);
        this.TablePanel.add(cardLabel);          
    }

    // apresenta as 13 primeiras cartas do deck (para teste apenas)
    private void drawHand(){

        CardLabel [] myCardLabels = new CardLabel[13];
        List<CardLabel> labelList = new ArrayList<CardLabel>();
        
        for(int i=0; i<13; i++){
           myCardLabels[i] = new CardLabel();            // cria o label da carta (vazio)
           this.TablePanel.add(myCardLabels[i]);         // adiciona a carta no panel da mesa
        }
        Card [] myHand = gameDeck.getHand();   // obtem as cartas 
        
        // para cada carta
        for(int i=0; i< myHand.length; i++){
            labelList.add(myCardLabels[i]);                     // adiciona o label numa lista    
            myCardLabels[i].setCardImage(myHand[i].getName());  // define a imagem da carta

        }      
       
        // posiciona as cartas 
        boolean covered = true;
        int nCards = labelList.size();
        for(int i=0; i<nCards; i++){
           if(i==(nCards - 1)) covered = false;  // a última é totalmente visivel
           labelList.get(i).setCardCovered(covered);
           labelList.get(i).setLocation(200+i*20,20);
        }
    }
    
    
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      TablePanel = new javax.swing.JPanel();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Card Game GUI");
      setResizable(false);

      TablePanel.setBackground(new java.awt.Color(0, 153, 0));

      javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
      TablePanel.setLayout(TablePanelLayout);
      TablePanelLayout.setHorizontalGroup(
         TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 700, Short.MAX_VALUE)
      );
      TablePanelLayout.setVerticalGroup(
         TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 496, Short.MAX_VALUE)
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(TablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap(30, Short.MAX_VALUE)
            .addComponent(TablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientFrame().setVisible(true);
            }
        });
    }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JPanel TablePanel;
   // End of variables declaration//GEN-END:variables

}
